// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewMember extends ethereum.Event {
  get params(): NewMember__Params {
    return new NewMember__Params(this);
  }
}

export class NewMember__Params {
  _event: NewMember;

  constructor(event: NewMember) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LepakCore extends ethereum.SmartContract {
  static bind(address: Address): LepakCore {
    return new LepakCore("LepakCore", address);
  }

  MembershipPrice(): BigInt {
    let result = super.call(
      "MembershipPrice",
      "MembershipPrice():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MembershipPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MembershipPrice",
      "MembershipPrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  UserInfoURI(param0: Address): string {
    let result = super.call("UserInfoURI", "UserInfoURI(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toString();
  }

  try_UserInfoURI(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("UserInfoURI", "UserInfoURI(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getMods(): Array<Address> {
    let result = super.call("getMods", "getMods():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getMods(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getMods", "getMods():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  isMember(_user: Address): boolean {
    let result = super.call("isMember", "isMember(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_isMember(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMember", "isMember(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMod(param0: Address): boolean {
    let result = super.call("isMod", "isMod(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isMod(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMod", "isMod(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  modLimit(): i32 {
    let result = super.call("modLimit", "modLimit():(uint8)", []);

    return result[0].toI32();
  }

  try_modLimit(): ethereum.CallResult<i32> {
    let result = super.tryCall("modLimit", "modLimit():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  mods(param0: BigInt): Address {
    let result = super.call("mods", "mods(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_mods(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("mods", "mods(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  usersPaid(param0: Address): boolean {
    let result = super.call("usersPaid", "usersPaid(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_usersPaid(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("usersPaid", "usersPaid(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _worldId(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _membershipAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class JoinWithEthCall extends ethereum.Call {
  get inputs(): JoinWithEthCall__Inputs {
    return new JoinWithEthCall__Inputs(this);
  }

  get outputs(): JoinWithEthCall__Outputs {
    return new JoinWithEthCall__Outputs(this);
  }
}

export class JoinWithEthCall__Inputs {
  _call: JoinWithEthCall;

  constructor(call: JoinWithEthCall) {
    this._call = call;
  }

  get infoURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class JoinWithEthCall__Outputs {
  _call: JoinWithEthCall;

  constructor(call: JoinWithEthCall) {
    this._call = call;
  }
}

export class JoinWithoutEthCall extends ethereum.Call {
  get inputs(): JoinWithoutEthCall__Inputs {
    return new JoinWithoutEthCall__Inputs(this);
  }

  get outputs(): JoinWithoutEthCall__Outputs {
    return new JoinWithoutEthCall__Outputs(this);
  }
}

export class JoinWithoutEthCall__Inputs {
  _call: JoinWithoutEthCall;

  constructor(call: JoinWithoutEthCall) {
    this._call = call;
  }

  get infoURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class JoinWithoutEthCall__Outputs {
  _call: JoinWithoutEthCall;

  constructor(call: JoinWithoutEthCall) {
    this._call = call;
  }
}

export class PayForTeamCall extends ethereum.Call {
  get inputs(): PayForTeamCall__Inputs {
    return new PayForTeamCall__Inputs(this);
  }

  get outputs(): PayForTeamCall__Outputs {
    return new PayForTeamCall__Outputs(this);
  }
}

export class PayForTeamCall__Inputs {
  _call: PayForTeamCall;

  constructor(call: PayForTeamCall) {
    this._call = call;
  }

  get _members(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class PayForTeamCall__Outputs {
  _call: PayForTeamCall;

  constructor(call: PayForTeamCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMembershipPriceCall extends ethereum.Call {
  get inputs(): SetMembershipPriceCall__Inputs {
    return new SetMembershipPriceCall__Inputs(this);
  }

  get outputs(): SetMembershipPriceCall__Outputs {
    return new SetMembershipPriceCall__Outputs(this);
  }
}

export class SetMembershipPriceCall__Inputs {
  _call: SetMembershipPriceCall;

  constructor(call: SetMembershipPriceCall) {
    this._call = call;
  }

  get _newPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMembershipPriceCall__Outputs {
  _call: SetMembershipPriceCall;

  constructor(call: SetMembershipPriceCall) {
    this._call = call;
  }
}

export class SetModsCall extends ethereum.Call {
  get inputs(): SetModsCall__Inputs {
    return new SetModsCall__Inputs(this);
  }

  get outputs(): SetModsCall__Outputs {
    return new SetModsCall__Outputs(this);
  }
}

export class SetModsCall__Inputs {
  _call: SetModsCall;

  constructor(call: SetModsCall) {
    this._call = call;
  }

  get _newMods(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetModsCall__Outputs {
  _call: SetModsCall;

  constructor(call: SetModsCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
