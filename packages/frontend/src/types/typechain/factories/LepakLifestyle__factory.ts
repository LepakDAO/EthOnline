/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { LepakLifestyle, LepakLifestyleInterface } from '../LepakLifestyle'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_coreAddr',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'hh_index',
        type: 'uint256',
      },
    ],
    name: 'AppliedForStay',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'hh_index',
        type: 'uint256',
      },
    ],
    name: 'ApprovedForStay',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'hh_uri',
        type: 'string',
      },
    ],
    name: 'StayAdded',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'stayURI',
        type: 'string',
      },
      {
        internalType: 'uint256[]',
        name: '_pricesPerRoom',
        type: 'uint256[]',
      },
    ],
    name: 'addStay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stayId',
        type: 'uint256',
      },
    ],
    name: 'applyForStay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stayId',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_applicants',
        type: 'address[]',
      },
    ],
    name: 'approveForStay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'coreContract',
    outputs: [
      {
        internalType: 'contract ILepakCore',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stayId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_member',
        type: 'address',
      },
    ],
    name: 'isApprovedForStay',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'stayApplications',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'stays',
    outputs: [
      {
        internalType: 'string',
        name: 'stayURI',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200192e3803806200192e8339818101604052810190620000379190620001c8565b620000576200004b6200009260201b60201c565b6200009a60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620001fa565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001908262000163565b9050919050565b620001a28162000183565b8114620001ae57600080fd5b50565b600081519050620001c28162000197565b92915050565b600060208284031215620001e157620001e06200015e565b5b6000620001f184828501620001b1565b91505092915050565b6080516117036200022b600039600081816102530152818161066a01528181610765015261097e01526117036000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610145578063c382e39a14610163578063d40409d414610193578063e80db5db146101af578063f2fde38b146101cd5761009e565b80633288fccb146100a3578063382ecbb4146100d357806352036639146100ef578063715018a61461011f57806376c6532614610129575b600080fd5b6100bd60048036038101906100b89190610d2a565b6101e9565b6040516100ca9190610d85565b60405180910390f35b6100ed60048036038101906100e89190610da0565b610251565b005b61010960048036038101906101049190610dcd565b610442565b6040516101169190610e1c565b60405180910390f35b610127610490565b005b610143600480360381019061013e9190610fdd565b6104a4565b005b61014d610599565b60405161015a9190610e1c565b60405180910390f35b61017d60048036038101906101789190610da0565b6105c2565b60405161018a91906110e1565b60405180910390f35b6101ad60048036038101906101a89190611159565b610668565b005b6101b761097c565b6040516101c49190611218565b60405180910390f35b6101e760048036038101906101e29190611233565b6109a0565b005b60006004600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a230c524336040518263ffffffff1660e01b81526004016102aa9190610e1c565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa919061128c565b610339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033090611305565b60405180910390fd5b60008114158015610353575061034f6001610a24565b8111155b610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038990611371565b60405180910390fd5b60036000828152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f470b0b5fd4167f7b35ca6d79a4d907767c6ddb2efed8534903cd56ee2d53411f33826040516104379291906113a0565b60405180910390a150565b6003602052816000526040600020818154811061045e57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610498610a32565b6104a26000610ab0565b565b6104ae6001610b74565b6040518060400160405280838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050815260200184815250600260006105126001610a24565b8152602001908152602001600020600082015181600001908051906020019061053c929190610b92565b506020820151816001019080519060200190610559929190610bdf565b509050507f35234ea318d79d8b916f55f9f9145c5889712b3d716ed239dc05865e8f853bed8360405161058c91906110e1565b60405180910390a1505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060010180546105e5906113f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610611906113f8565b801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b5050505050905081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638988b284336040518263ffffffff1660e01b81526004016106c19190610e1c565b60206040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610711919061128c565b610750576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074790611476565b60405180910390fd5b600082829050905060005b81811015610975577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a230c5248585848181106107b2576107b1611496565b5b90506020020160208101906107c79190611233565b6040518263ffffffff1660e01b81526004016107e39190610e1c565b60206040518083038186803b1580156107fb57600080fd5b505afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610833919061128c565b610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086990611537565b60405180910390fd5b600160046000878152602001908152602001600020600086868581811061089c5761089b611496565b5b90506020020160208101906108b19190611233565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f135018eb03934262a193f440c1ef436cbaf912fe553a59f6d63108d1e6f0e34784848381811061093657610935611496565b5b905060200201602081019061094b9190611233565b8660405161095a9291906113a0565b60405180910390a1808061096d90611586565b91505061075b565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109a8610a32565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0f90611641565b60405180910390fd5b610a2181610ab0565b50565b600081600001549050919050565b610a3a610b8a565b73ffffffffffffffffffffffffffffffffffffffff16610a58610599565b73ffffffffffffffffffffffffffffffffffffffff1614610aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa5906116ad565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b828054828255906000526020600020908101928215610bce579160200282015b82811115610bcd578251825591602001919060010190610bb2565b5b509050610bdb9190610c65565b5090565b828054610beb906113f8565b90600052602060002090601f016020900481019282610c0d5760008555610c54565b82601f10610c2657805160ff1916838001178555610c54565b82800160010185558215610c54579182015b82811115610c53578251825591602001919060010190610c38565b5b509050610c619190610c65565b5090565b5b80821115610c7e576000816000905550600101610c66565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ca981610c96565b8114610cb457600080fd5b50565b600081359050610cc681610ca0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf782610ccc565b9050919050565b610d0781610cec565b8114610d1257600080fd5b50565b600081359050610d2481610cfe565b92915050565b60008060408385031215610d4157610d40610c8c565b5b6000610d4f85828601610cb7565b9250506020610d6085828601610d15565b9150509250929050565b60008115159050919050565b610d7f81610d6a565b82525050565b6000602082019050610d9a6000830184610d76565b92915050565b600060208284031215610db657610db5610c8c565b5b6000610dc484828501610cb7565b91505092915050565b60008060408385031215610de457610de3610c8c565b5b6000610df285828601610cb7565b9250506020610e0385828601610cb7565b9150509250929050565b610e1681610cec565b82525050565b6000602082019050610e316000830184610e0d565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e8a82610e41565b810181811067ffffffffffffffff82111715610ea957610ea8610e52565b5b80604052505050565b6000610ebc610c82565b9050610ec88282610e81565b919050565b600067ffffffffffffffff821115610ee857610ee7610e52565b5b610ef182610e41565b9050602081019050919050565b82818337600083830152505050565b6000610f20610f1b84610ecd565b610eb2565b905082815260208101848484011115610f3c57610f3b610e3c565b5b610f47848285610efe565b509392505050565b600082601f830112610f6457610f63610e37565b5b8135610f74848260208601610f0d565b91505092915050565b600080fd5b600080fd5b60008083601f840112610f9d57610f9c610e37565b5b8235905067ffffffffffffffff811115610fba57610fb9610f7d565b5b602083019150836020820283011115610fd657610fd5610f82565b5b9250929050565b600080600060408486031215610ff657610ff5610c8c565b5b600084013567ffffffffffffffff81111561101457611013610c91565b5b61102086828701610f4f565b935050602084013567ffffffffffffffff81111561104157611040610c91565b5b61104d86828701610f87565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611093578082015181840152602081019050611078565b838111156110a2576000848401525b50505050565b60006110b382611059565b6110bd8185611064565b93506110cd818560208601611075565b6110d681610e41565b840191505092915050565b600060208201905081810360008301526110fb81846110a8565b905092915050565b60008083601f84011261111957611118610e37565b5b8235905067ffffffffffffffff81111561113657611135610f7d565b5b60208301915083602082028301111561115257611151610f82565b5b9250929050565b60008060006040848603121561117257611171610c8c565b5b600061118086828701610cb7565b935050602084013567ffffffffffffffff8111156111a1576111a0610c91565b5b6111ad86828701611103565b92509250509250925092565b6000819050919050565b60006111de6111d96111d484610ccc565b6111b9565b610ccc565b9050919050565b60006111f0826111c3565b9050919050565b6000611202826111e5565b9050919050565b611212816111f7565b82525050565b600060208201905061122d6000830184611209565b92915050565b60006020828403121561124957611248610c8c565b5b600061125784828501610d15565b91505092915050565b61126981610d6a565b811461127457600080fd5b50565b60008151905061128681611260565b92915050565b6000602082840312156112a2576112a1610c8c565b5b60006112b084828501611277565b91505092915050565b7f63616c6c6572206973206e6f742061206d656d62657200000000000000000000600082015250565b60006112ef601683611064565b91506112fa826112b9565b602082019050919050565b6000602082019050818103600083015261131e816112e2565b9050919050565b7f74686973207374617920696420646f65736e7420657869737400000000000000600082015250565b600061135b601983611064565b915061136682611325565b602082019050919050565b6000602082019050818103600083015261138a8161134e565b9050919050565b61139a81610c96565b82525050565b60006040820190506113b56000830185610e0d565b6113c26020830184611391565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061141057607f821691505b60208210811415611424576114236113c9565b5b50919050565b7f63616c6c6572206973206e6f742061206d6f6400000000000000000000000000600082015250565b6000611460601383611064565b915061146b8261142a565b602082019050919050565b6000602082019050818103600083015261148f81611453565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4170706c6963616e74206973206e6f742061206d656d626572206f66204c657060008201527f616b000000000000000000000000000000000000000000000000000000000000602082015250565b6000611521602283611064565b915061152c826114c5565b604082019050919050565b6000602082019050818103600083015261155081611514565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061159182610c96565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115c4576115c3611557565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061162b602683611064565b9150611636826115cf565b604082019050919050565b6000602082019050818103600083015261165a8161161e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611697602083611064565b91506116a282611661565b602082019050919050565b600060208201905081810360008301526116c68161168a565b905091905056fea26469706673582212204f946fa1a9a295b5d90cedc1ad15bd6f985820282e1df236a4224184100f8b1064736f6c63430008090033'

type LepakLifestyleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: LepakLifestyleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class LepakLifestyle__factory extends ContractFactory {
  constructor(...args: LepakLifestyleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _coreAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LepakLifestyle> {
    return super.deploy(_coreAddr, overrides || {}) as Promise<LepakLifestyle>
  }
  override getDeployTransaction(
    _coreAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coreAddr, overrides || {})
  }
  override attach(address: string): LepakLifestyle {
    return super.attach(address) as LepakLifestyle
  }
  override connect(signer: Signer): LepakLifestyle__factory {
    return super.connect(signer) as LepakLifestyle__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): LepakLifestyleInterface {
    return new utils.Interface(_abi) as LepakLifestyleInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LepakLifestyle {
    return new Contract(address, _abi, signerOrProvider) as LepakLifestyle
  }
}
