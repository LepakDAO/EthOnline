/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { LepakLifestyle, LepakLifestyleInterface } from '../LepakLifestyle'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_coreAddr',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'hh_index',
        type: 'uint256',
      },
    ],
    name: 'AppliedForStay',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'hh_index',
        type: 'uint256',
      },
    ],
    name: 'ApprovedForStay',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'hh_uri',
        type: 'string',
      },
    ],
    name: 'StayAdded',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'stayURI',
        type: 'string',
      },
      {
        internalType: 'uint256[]',
        name: '_pricesPerRoom',
        type: 'uint256[]',
      },
    ],
    name: 'addStay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stayId',
        type: 'uint256',
      },
    ],
    name: 'applyForStay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stayId',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_applicants',
        type: 'address[]',
      },
    ],
    name: 'approveForStay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'coreContract',
    outputs: [
      {
        internalType: 'contract ILepakCore',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stayId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_member',
        type: 'address',
      },
    ],
    name: 'isApprovedForStay',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'stayApplications',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'stays',
    outputs: [
      {
        internalType: 'string',
        name: 'stayURI',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162001a1d38038062001a1d8339818101604052810190620000379190620001c8565b620000576200004b6200009260201b60201c565b6200009a60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620001fa565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001908262000163565b9050919050565b620001a28162000183565b8114620001ae57600080fd5b50565b600081519050620001c28162000197565b92915050565b600060208284031215620001e157620001e06200015e565b5b6000620001f184828501620001b1565b91505092915050565b6080516117eb6200023260003960008181610253015281816104a6015281816107520152818161084d0152610a6601526117eb6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610145578063c382e39a14610163578063d40409d414610193578063e80db5db146101af578063f2fde38b146101cd5761009e565b80633288fccb146100a3578063382ecbb4146100d357806352036639146100ef578063715018a61461011f57806376c6532614610129575b600080fd5b6100bd60048036038101906100b89190610e12565b6101e9565b6040516100ca9190610e6d565b60405180910390f35b6100ed60048036038101906100e89190610e88565b610251565b005b61010960048036038101906101049190610eb5565b610442565b6040516101169190610f04565b60405180910390f35b610127610490565b005b610143600480360381019061013e91906110c5565b6104a4565b005b61014d610681565b60405161015a9190610f04565b60405180910390f35b61017d60048036038101906101789190610e88565b6106aa565b60405161018a91906111c9565b60405180910390f35b6101ad60048036038101906101a89190611241565b610750565b005b6101b7610a64565b6040516101c49190611300565b60405180910390f35b6101e760048036038101906101e2919061131b565b610a88565b005b60006004600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a230c524336040518263ffffffff1660e01b81526004016102aa9190610f04565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190611374565b610339576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610330906113ed565b60405180910390fd5b60008114158015610353575061034f6001610b0c565b8111155b610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038990611459565b60405180910390fd5b60036000828152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f470b0b5fd4167f7b35ca6d79a4d907767c6ddb2efed8534903cd56ee2d53411f3382604051610437929190611488565b60405180910390a150565b6003602052816000526040600020818154811061045e57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610498610b1a565b6104a26000610b98565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638988b284336040518263ffffffff1660e01b81526004016104fd9190610f04565b60206040518083038186803b15801561051557600080fd5b505afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d9190611374565b61058c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610583906114fd565b60405180910390fd5b6105966001610c5c565b6040518060400160405280838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050815260200184815250600260006105fa6001610b0c565b81526020019081526020016000206000820151816000019080519060200190610624929190610c7a565b506020820151816001019080519060200190610641929190610cc7565b509050507f35234ea318d79d8b916f55f9f9145c5889712b3d716ed239dc05865e8f853bed8360405161067491906111c9565b60405180910390a1505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060010180546106cd9061154c565b80601f01602080910402602001604051908101604052809291908181526020018280546106f99061154c565b80156107465780601f1061071b57610100808354040283529160200191610746565b820191906000526020600020905b81548152906001019060200180831161072957829003601f168201915b5050505050905081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638988b284336040518263ffffffff1660e01b81526004016107a99190610f04565b60206040518083038186803b1580156107c157600080fd5b505afa1580156107d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f99190611374565b610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f906114fd565b60405180910390fd5b600082829050905060005b81811015610a5d577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a230c52485858481811061089a5761089961157e565b5b90506020020160208101906108af919061131b565b6040518263ffffffff1660e01b81526004016108cb9190610f04565b60206040518083038186803b1580156108e357600080fd5b505afa1580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190611374565b61095a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109519061161f565b60405180910390fd5b60016004600087815260200190815260200160002060008686858181106109845761098361157e565b5b9050602002016020810190610999919061131b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f135018eb03934262a193f440c1ef436cbaf912fe553a59f6d63108d1e6f0e347848483818110610a1e57610a1d61157e565b5b9050602002016020810190610a33919061131b565b86604051610a42929190611488565b60405180910390a18080610a559061166e565b915050610843565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a90610b1a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af790611729565b60405180910390fd5b610b0981610b98565b50565b600081600001549050919050565b610b22610c72565b73ffffffffffffffffffffffffffffffffffffffff16610b40610681565b73ffffffffffffffffffffffffffffffffffffffff1614610b96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8d90611795565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b828054828255906000526020600020908101928215610cb6579160200282015b82811115610cb5578251825591602001919060010190610c9a565b5b509050610cc39190610d4d565b5090565b828054610cd39061154c565b90600052602060002090601f016020900481019282610cf55760008555610d3c565b82601f10610d0e57805160ff1916838001178555610d3c565b82800160010185558215610d3c579182015b82811115610d3b578251825591602001919060010190610d20565b5b509050610d499190610d4d565b5090565b5b80821115610d66576000816000905550600101610d4e565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d9181610d7e565b8114610d9c57600080fd5b50565b600081359050610dae81610d88565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ddf82610db4565b9050919050565b610def81610dd4565b8114610dfa57600080fd5b50565b600081359050610e0c81610de6565b92915050565b60008060408385031215610e2957610e28610d74565b5b6000610e3785828601610d9f565b9250506020610e4885828601610dfd565b9150509250929050565b60008115159050919050565b610e6781610e52565b82525050565b6000602082019050610e826000830184610e5e565b92915050565b600060208284031215610e9e57610e9d610d74565b5b6000610eac84828501610d9f565b91505092915050565b60008060408385031215610ecc57610ecb610d74565b5b6000610eda85828601610d9f565b9250506020610eeb85828601610d9f565b9150509250929050565b610efe81610dd4565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f7282610f29565b810181811067ffffffffffffffff82111715610f9157610f90610f3a565b5b80604052505050565b6000610fa4610d6a565b9050610fb08282610f69565b919050565b600067ffffffffffffffff821115610fd057610fcf610f3a565b5b610fd982610f29565b9050602081019050919050565b82818337600083830152505050565b600061100861100384610fb5565b610f9a565b90508281526020810184848401111561102457611023610f24565b5b61102f848285610fe6565b509392505050565b600082601f83011261104c5761104b610f1f565b5b813561105c848260208601610ff5565b91505092915050565b600080fd5b600080fd5b60008083601f84011261108557611084610f1f565b5b8235905067ffffffffffffffff8111156110a2576110a1611065565b5b6020830191508360208202830111156110be576110bd61106a565b5b9250929050565b6000806000604084860312156110de576110dd610d74565b5b600084013567ffffffffffffffff8111156110fc576110fb610d79565b5b61110886828701611037565b935050602084013567ffffffffffffffff81111561112957611128610d79565b5b6111358682870161106f565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561117b578082015181840152602081019050611160565b8381111561118a576000848401525b50505050565b600061119b82611141565b6111a5818561114c565b93506111b581856020860161115d565b6111be81610f29565b840191505092915050565b600060208201905081810360008301526111e38184611190565b905092915050565b60008083601f84011261120157611200610f1f565b5b8235905067ffffffffffffffff81111561121e5761121d611065565b5b60208301915083602082028301111561123a5761123961106a565b5b9250929050565b60008060006040848603121561125a57611259610d74565b5b600061126886828701610d9f565b935050602084013567ffffffffffffffff81111561128957611288610d79565b5b611295868287016111eb565b92509250509250925092565b6000819050919050565b60006112c66112c16112bc84610db4565b6112a1565b610db4565b9050919050565b60006112d8826112ab565b9050919050565b60006112ea826112cd565b9050919050565b6112fa816112df565b82525050565b600060208201905061131560008301846112f1565b92915050565b60006020828403121561133157611330610d74565b5b600061133f84828501610dfd565b91505092915050565b61135181610e52565b811461135c57600080fd5b50565b60008151905061136e81611348565b92915050565b60006020828403121561138a57611389610d74565b5b60006113988482850161135f565b91505092915050565b7f63616c6c6572206973206e6f742061206d656d62657200000000000000000000600082015250565b60006113d760168361114c565b91506113e2826113a1565b602082019050919050565b60006020820190508181036000830152611406816113ca565b9050919050565b7f74686973207374617920696420646f65736e7420657869737400000000000000600082015250565b600061144360198361114c565b915061144e8261140d565b602082019050919050565b6000602082019050818103600083015261147281611436565b9050919050565b61148281610d7e565b82525050565b600060408201905061149d6000830185610ef5565b6114aa6020830184611479565b9392505050565b7f63616c6c6572206973206e6f742061206d6f6400000000000000000000000000600082015250565b60006114e760138361114c565b91506114f2826114b1565b602082019050919050565b60006020820190508181036000830152611516816114da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061156457607f821691505b602082108114156115785761157761151d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4170706c6963616e74206973206e6f742061206d656d626572206f66204c657060008201527f616b000000000000000000000000000000000000000000000000000000000000602082015250565b600061160960228361114c565b9150611614826115ad565b604082019050919050565b60006020820190508181036000830152611638816115fc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061167982610d7e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116ac576116ab61163f565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061171360268361114c565b915061171e826116b7565b604082019050919050565b6000602082019050818103600083015261174281611706565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061177f60208361114c565b915061178a82611749565b602082019050919050565b600060208201905081810360008301526117ae81611772565b905091905056fea2646970667358221220485498d14e021a79269b926ad923cee0f06b7e61114aab884569dbc528b7404f64736f6c63430008090033'

type LepakLifestyleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: LepakLifestyleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class LepakLifestyle__factory extends ContractFactory {
  constructor(...args: LepakLifestyleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _coreAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LepakLifestyle> {
    return super.deploy(_coreAddr, overrides || {}) as Promise<LepakLifestyle>
  }
  override getDeployTransaction(
    _coreAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coreAddr, overrides || {})
  }
  override attach(address: string): LepakLifestyle {
    return super.attach(address) as LepakLifestyle
  }
  override connect(signer: Signer): LepakLifestyle__factory {
    return super.connect(signer) as LepakLifestyle__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): LepakLifestyleInterface {
    return new utils.Interface(_abi) as LepakLifestyleInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LepakLifestyle {
    return new Contract(address, _abi, signerOrProvider) as LepakLifestyle
  }
}
